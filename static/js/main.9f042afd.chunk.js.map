{"version":3,"sources":["components/RerenderNewTree.js","components/ToolbarMy.js","panels/Home.js","components/FormRegAuth.js","panels/AdminAuth.js","components/SearchMy.js","components/ListGamesOrGroups.js","components/AdminCardMainPage.js","panels/AdminMainPage.js","panels/PlayerAuth.js","panels/PlayerRegister.js","components/GameBlock.js","panels/PlayerMainPage.js","components/RedirectNoAuth.js","panels/JoinAndAddGame.js","components/PageQuestion/BlockHint.js","components/PageQuestion/QuestionInfo.js","components/PageQuestion/NextTaskOrWin.js","components/PageQuestion/QuestionCardAnswer.js","components/PageQuestion/TimerHeader.js","components/PageQuestion/FooterAnswerCount.js","components/PageQuestion/Task.js","panels/InfoGame.js","components/GetInfoGamesJson.js","panels/CreateNewGame.js","panels/CreateNewTeam.js","panels/InfoGameForAdmin.js","panels/InfoTeamForAdmin.js","components/PageEditorGame/EditorQuestion.js","components/PageEditorGame/EditorTeamsPlayers.js","components/PageEditorGame/CardListContent.js","panels/EditGameForAdmit.js","App.js","serviceWorker.js","index.js"],"names":["rerenderNewTreeFunc","statusRenderer","ReactDOM","render","from","to","document","getElementById","ToolbarMy","backlink","heightTitle","className","localStorage","getItem","onClick","clear","window","infoUser","status","Home","modifier","FormRegAuth","typeForm","typeUser","float","placeholder","statusUser","data_json","data_json_admin","data_json_player","loginInp","querySelector","value","passInp","i","length","log","login","pas","password","setItem","AdminAuth","SearchMy","searchText","onChange","id","ListGames","typeContent","nameContent","nameEdit","e","editName","target","undefined","data_json_games","map","arr","nameGame","game","Button","inverted","color","filter","regexp","RegExp","match","data_json_teams","code","name","nameTeam","AdminCardMainPage","Card","fluid","text","ListGamesOrGroups","Content","class","content","icon","labelPosition","AdminMainPage","getCardContent","idBtn","Group","positive","Or","align","PlayerAuth","PlayerRegister","GameBlock","arr_g","gameNAME","PlayerMainPage","jsonInfo","activeGame","RedirectNoAuth","JoinAndAddGame","isAuth","console","BlockHint","hintText","info_team_player","jsonInfoTeams","activeHint","activeQuestion","jsonInfoGame","questions","hints","textHint","lastHnt","QuestionInfo","activeQuestNum","textQuest","quest","videoQuest","video","photoQuest","photo","controls","src","alt","captain","mistakes","answerIsTrue","nextHint","QuestionCardAnswer","activeQuestionNum","toLowerCase","answer","mistake","alert","TimerHeader","minuteToNextHint","textHeaderTime","totalTime","infoQuest","minuteToHint","toFixed","timePerLevel","initialTime","direction","checkpoints","time","callback","location","Fragment","Minutes","Seconds","FooterAnswerCount","activeQuest","totalQuest","Task","InfoGame","getInfoGamesJson","CreateNewGame","nameGameElement","React","createRef","dateGameElement","timeGameElement","Form","Field","ref","required","type","obj_result","current","dateGame","timeGame","dateToStart","timeToStart","usersList","newJsonInfoUsers","randomCode","nameTeamElement","symbols","randomIndex","Math","floor","random","randomCodeFunc","for","data","InfoGameForAdmin","infoTeams","Table","celled","Header","Row","HeaderCell","Body","Cell","falseAnswer","trueAnswer","thisTeamCode","allTeams","allUsers","infoPlayers","team","push","totalAnswerIsTrue","totalAnswerIsFalse","EditorQuestion","arrData","addHint","saveQuest","scope","index","rows","hint","colspan","Modal","trigger","EditorTeamsPlayers","addTeam","delTeam","newJsonInfoTeams","Segment","Grid","columns","relaxed","stackable","Column","Meta","players","Description","extra","basic","Divider","vertical","CardListContent","EditGameForAdmit","props","gameName","App","data_json_admins","data_json_users","accessAccount","exact","path","component","InfoTeamForAdmin","CreateNewTeam","Boolean","hostname","answerIsFalse","gameIfAdmin","codeTeam","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9f042afd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Redirect } from 'react-router-dom';\r\nimport App from '.././App';\r\n\r\n\r\nexport const rerenderNewTreeFunc = (statusRenderer) => {\r\n\tif(statusRenderer === '0') {\r\n\t\tReactDOM.render(\r\n\t\t\t<HashRouter>\r\n\t\t\t<Redirect from='/player-main-page' to='/home'/>\r\n\t\t\t<Redirect from='/admin-main-page' to='/home'/>\r\n\t\t\t<App />\r\n\t\t\t</HashRouter>,\r\n\t\t\tdocument.getElementById('root')\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if(statusRenderer === '1') {\r\n\t\t\tReactDOM.render(\r\n\t\t\t<HashRouter>\r\n\t\t\t<Redirect from='/player-auth' to='/home'/>\r\n\t\t\t<Redirect from='/player-register' to='/home'/>\r\n\t\t\t<Redirect from='/admin-auth' to='/home'/>\r\n\t\t\t<App />\r\n\t\t\t</HashRouter>,\r\n\t\t\tdocument.getElementById('root')\r\n\t\t\t);\r\n\t\t}\r\n\r\n\r\n\t}\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Toolbar, ToolbarButton, BackButton } from 'react-onsenui'; \r\n\r\nimport { rerenderNewTreeFunc } from './RerenderNewTree';\r\n\r\nconst ToolbarMy = ({backlink, heightTitle}) => {\r\n\r\n\r\n\tconst exitAccount = () => {\r\n\t\tlocalStorage.clear();\r\n\t\twindow.infoUser.status = '';\r\n\t\trerenderNewTreeFunc('0');\r\n\t};\r\n\r\n\treturn(\r\n\r\n\t\t<div className='topMenu'>\r\n\r\n\t\t<Toolbar>\r\n\t\t<div className=\"left\">\r\n\r\n\t\t{backlink ?\r\n\t\t\t<NavLink to={backlink}>\r\n\t\t\t<BackButton></BackButton>\r\n\t\t\t</NavLink> : null\r\n\t\t}\r\n\r\n\t\t</div>\r\n\t\t<div className=\"font-arial center\">\r\n\t\t{heightTitle}\r\n\t\t</div>\r\n\r\n\t\t{ (localStorage.getItem('authLoginStatus') !== null && localStorage.getItem('authLoginStatus') !== '') ?\r\n\t\t<div className=\"right\">\r\n\t\t<ToolbarButton onClick={exitAccount}>\r\n\t\tEXIT\r\n\t\t</ToolbarButton>\r\n\t\t</div> : null\r\n\t}\r\n\r\n\t</Toolbar>   \r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default ToolbarMy;","import React from 'react';\r\n\r\nimport { NavLink, Redirect  } from 'react-router-dom';\r\nimport { Button } from 'react-onsenui';\r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\n\r\n\r\nconst Home = () => (\r\n\t<div className='bg-home'>\r\n\r\n\t{\r\n // Переадресация если уже авторизирован\r\n window.infoUser.status === 'player' ? <Redirect from='/' to='/player-main-page'/> : null }\r\n { window.infoUser.status === 'admin' ? <Redirect from='/' to='/admin-main-page'/> : null }\r\n\r\n <ToolbarMy heightTitle='WORLD OF QUESTS' />\r\n <div className='menu-main-block'>\r\n <div className='menu-block'>\r\n <NavLink to='player-auth'>\r\n <Button modifier=\"large--cta\">Игрок</Button>\r\n </NavLink>\r\n </div>\r\n <div className='menu-block'>\r\n <NavLink to='admin-auth'>\r\n <Button modifier=\"large--cta\">Админ</Button>\r\n </NavLink>\r\n </div>\r\n </div>\r\n\r\n </div>\r\n )\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport { Button, Input } from 'react-onsenui'; \r\nimport data_json_admin from '../json-info/admins.json';\r\nimport data_json_player from '../json-info/users.json';\r\n \r\nimport { rerenderNewTreeFunc } from './RerenderNewTree';\r\n\r\n \r\n \r\n\r\nconst FormRegAuth = ({typeForm, typeUser}) => {\r\n\r\n\tconst submit = () => {\r\n\t\tif(typeForm === 'auth') {\r\n\t\t\tvar statusUser;\r\n\t\t\tvar data_json;\r\n\t\t\tif(typeUser === 'admin') {\r\n\t\t\t\tdata_json = data_json_admin;\r\n\t\t\t\tstatusUser = 'admin';\r\n\t\t\t}\r\n\t\t\telse if (typeUser === 'player') {\r\n\t\t\t\tdata_json = data_json_player;\r\n\t\t\t\tstatusUser = 'player';\r\n\t\t\t}\r\n\t\t\tlet loginInp = document.querySelector('.inputLogin').value;\r\n\t\t\tlet passInp = document.querySelector('.inputPassword').value;\r\n\t\t\tfor(let i = 0; i < data_json.length; i++) {\r\n\t\t\t\tlet log = data_json[i].login;\r\n\t\t\t\tlet pas = data_json[i].password;\r\n\t\t\t\tif(loginInp === log && passInp === pas)\r\n\t\t\t\t{\r\n\t\t\t\t\tlocalStorage.setItem('authLoginName', log);\r\n\t\t\t\t\tlocalStorage.setItem('authLoginStatus', statusUser);\r\n\t\t\t\t    rerenderNewTreeFunc('1');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\r\n\t\t<div className='user-auth-block'>\r\n\t\t<Input\r\n\t\tclassName='inputLogin text-white_total'\r\n\t\tfloat\r\n\t\tmodifier='material'\r\n\t\tplaceholder='Логин' />\r\n\t\t<Input\r\n\t\tclassName='inputPassword text-white_total mt-35'\r\n\t\tfloat\r\n\t\tmodifier='material'\r\n\t\tplaceholder='Пароль' />\r\n\t\t<Button onClick={submit} className='mt-100'>ОК</Button>\r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default FormRegAuth;\r\n","import React from 'react';\r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport FormRegAuth from '.././components/FormRegAuth';\r\n\r\n\r\nconst AdminAuth = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div className='bg-home h-vh-100'>\r\n\t\t<ToolbarMy backlink='/home' heightTitle='Авторизация Админа' />\r\n\t\t<FormRegAuth typeForm='auth' typeUser='admin' />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default AdminAuth;\r\n","import React from 'react';\r\nimport { SearchInput } from 'react-onsenui'; // Only import the necessary components\r\n\r\n\r\nconst SearchMy = ({searchText, onChange}) => {\r\n\r\n\treturn(\r\n\t\t<SearchInput id='searchMy' \r\n\t\tonChange={onChange}\r\n\t\tmodifier='material'\r\n\t\tplaceholder={searchText} />\r\n\t\t)\r\n}\r\n\r\nexport default SearchMy;","import React from 'react';\r\nimport data_json_games from '.././json-info/games.json';\r\nimport data_json_teams from '.././json-info/teams.json';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nconst ListGames = ({typeContent, nameContent}) => {\r\n\r\n\tconst nameEdit = (e) => {\r\n\t\twindow.infoUser.editName = e.target.id;\r\n\t\tlocalStorage.setItem('gameEditor', window.infoUser.editName);\r\n\t};\r\n\r\n\t// window.location = '#';\r\n\t// console.log(typeContent);\r\n\r\n\tif(typeContent === 'games') {\r\n\t\tif(nameContent === undefined || nameContent === '') {\r\n\t\t\treturn (\r\n\t\t\t\tdata_json_games.map(arr => {\r\n\t\t\t\t\tlet nameGame = arr.game;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='col-12 p-0 m-0 mb-3 row row-justify-center content-center'>\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-game-for-admin'>\r\n\t\t\t\t\t\t<Button id={nameGame} inverted color='orange'>\r\n\t\t\t\t\t\t{nameGame}\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/edit-game-for-admin'>\r\n\t\t\t\t\t\t<Button id={nameGame} inverted color='blue'>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t} else if (nameContent !== undefined) {\r\n\t\t\treturn (\r\n\t\t\t\tdata_json_games.filter(arr => {\r\n\t\t\t\t\tlet nameGame = arr.game;\r\n\t\t\t\t\tlet regexp = new RegExp(`${nameContent}`, 'igm');\r\n\t\t\t\t\tlet result = nameGame.match(regexp);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}).map(arr => {\r\n\t\t\t\t\tlet nameGame = arr.game;\r\n\t\t\t\t\treturn (\t\r\n\t\t\t\t\t\t<div className='col-12 p-0 m-0 mb-3 row row-justify-center content-center'>\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-game-for-admin'>\r\n\t\t\t\t\t\t<Button id={nameGame} inverted color='orange'>\r\n\t\t\t\t\t\t{nameGame}\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-game-for-admin'>\r\n\t\t\t\t\t\t<Button id={nameGame} inverted color='blue'>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t))\r\n\t\t}\r\n\t} else if (typeContent === 'groups') {\r\n\t\tif(nameContent === undefined) {\r\n\t\t\treturn (\r\n\t\t\t\tdata_json_teams.map(arr => (\r\n\t\t\t\t\t<div className='col-12 p-0 m-0 mb-3 row row-justify-center content-center'>\r\n\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-team-for-admin'>\r\n\t\t\t\t\t<Button id={arr.code} inverted color='orange'>\r\n\t\t\t\t\t{arr.name}\r\n\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-team-for-admin'>\r\n\t\t\t\t\t<Button id={arr.code} inverted color='blue'>\r\n\t\t\t\t\tРедактировать\r\n\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t)\r\n\t\t} else if (nameContent !== undefined) {\r\n\t\t\treturn (\r\n\t\t\t\tdata_json_teams.filter(arr => {\r\n\t\t\t\t\tlet nameTeam = arr.name;\r\n\t\t\t\t\tlet regexp = new RegExp(`${nameContent}`, 'igm');\r\n\t\t\t\t\tlet result = nameTeam.match(regexp);\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}).map(arr => {\r\n\t\t\t\t\tlet nameTeam = arr.name;\r\n\t\t\t\t\tlet code = arr.code;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className='col-12 p-0 m-0 mb-3 row row-justify-center content-center'>\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-team-for-admin'>\r\n\t\t\t\t\t\t<Button id={code} inverted color='orange'>\r\n\t\t\t\t\t\t{nameTeam}\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\r\n\t\t\t\t\t\t<NavLink onClick={nameEdit} className='col-6 text-center' to='/info-team-for-admin'>\r\n\t\t\t\t\t\t<Button id={code} inverted color='blue'>\r\n\t\t\t\t\t\tРедактировать\r\n\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default ListGames;\r\n","import React from 'react';\r\n\r\nimport { Button, Card } from 'semantic-ui-react';\r\nimport SearchMy from '.././components/SearchMy';\r\nimport { NavLink, HashRouter } from 'react-router-dom';\r\nimport ListGamesOrGroups from '.././components/ListGamesOrGroups';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst AdminCardMainPage = ({typeContent, searchText}) => {\r\n  \r\n\tconst onChangeSearch = (e) => {\r\n\t\tlet text = e.target.value;\r\n\t\tReactDOM.render(\r\n\t\t\t<HashRouter>\r\n\t\t\t<ListGamesOrGroups typeContent={typeContent} nameContent={text} />\r\n\t\t\t</HashRouter>,\r\n\t\t\tdocument.querySelector('.list-games-or-groups')\r\n\t\t\t);\r\n\t};\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<HashRouter>\r\n\t\t<Card fluid>\r\n\t\t<SearchMy onChange={onChangeSearch} searchText={searchText} />\r\n\t\t\r\n\t\t<Card.Content>\r\n\t\t<div className='list-games-or-groups'>\r\n\t\t<ListGamesOrGroups typeContent={typeContent} />\r\n\t\t</div>\r\n\t\t</Card.Content>\r\n\r\n\r\n\t\t<Card.Content className='center-flex'>\r\n\t\t{\r\n\t\t\ttypeContent === 'games' ? <NavLink class='text-white link-disable' to='create-new-game'>\r\n\t\t\t<Button\r\n\t\t\tcolor='blue'\r\n\t\t\tcontent='Создать новую игру'\r\n\t\t\ticon='add'\r\n\t\t\tlabelPosition='left'\r\n\t\t\t/>\r\n\t\t\t</NavLink> : null\r\n\t\t}\r\n\t\t{\r\n\t\t\ttypeContent === 'groups' ? <NavLink class='text-white link-disable' to='create-new-team'>\r\n\t\t\t<Button\r\n\t\t\tcolor='blue'\r\n\t\t\tcontent='Создать новую группу'\r\n\t\t\ticon='add'\r\n\t\t\tlabelPosition='left'\r\n\t\t\t/>\r\n\t\t\t</NavLink> : null\r\n\t\t}\r\n\t\t</Card.Content>\r\n\r\n\t\t</Card>\r\n\t\t</HashRouter>\r\n\t\t)\r\n}\r\n\r\nexport default AdminCardMainPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Redirect, HashRouter } from 'react-router-dom';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Button } from 'semantic-ui-react';\r\nimport AdminCardMainPage from '.././components/AdminCardMainPage';\r\n\r\n\r\nconst AdminMainPage = () => {\r\n\r\n\tconst getCardContent = (e) => {\r\n\r\n\t\tvar idBtn = e.target.id;\r\n\r\n\t\tif (idBtn === 'btnGames') {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<AdminCardMainPage typeContent='games' searchText='Поиск игр' />,\r\n\t\t\t\tdocument.getElementById('cardContent')\r\n\t\t\t\t);\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<Button.Group>\r\n\t\t\t\t<Button id='btnGames' onClick={getCardContent} positive >Игры</Button>\r\n\t\t\t\t<Button.Or text='|||' />\r\n\t\t\t\t<Button id='btnGroups' onClick={getCardContent} >Группы</Button>\r\n\t\t\t\t</Button.Group>,\r\n\t\t\t\tdocument.getElementById('btnOption')\r\n\t\t\t\t);\r\n\t\t} else if (idBtn === 'btnGroups') {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<AdminCardMainPage typeContent='groups' searchText='Поиск групп' />,\r\n\t\t\t\tdocument.getElementById('cardContent')\r\n\t\t\t\t);\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<Button.Group>\r\n\t\t\t\t<Button id='btnGames' onClick={getCardContent} >Игры</Button>\r\n\t\t\t\t<Button.Or text='|||' />\r\n\t\t\t\t<Button id='btnGroups' onClick={getCardContent} positive>Группы</Button>\r\n\t\t\t\t</Button.Group>,\r\n\t\t\t\tdocument.getElementById('btnOption')\r\n\t\t\t\t);\r\n\t\t}\r\n\r\n\r\n\r\n\t};\r\n\r\n\r\n\treturn(\r\n\r\n\t\t<div align='center'>\r\n\r\n\t\t{ window.infoUser.status !== 'admin' ? <Redirect from='/' to='/home'/> : null }\r\n\t\t<ToolbarMy heightTitle='Админ' />\t\r\n\t\t<div id='btnOption'>\r\n\t\t<Button.Group>\r\n\t\t<Button id='btnGames' onClick={getCardContent} positive >Игры</Button>\r\n\t\t<Button.Or text='|||' />\r\n\t\t<Button id='btnGroups' onClick={getCardContent}>Группы</Button>\r\n\t\t</Button.Group>\r\n\t\t</div>\r\n\t\t<br/><br/>\r\n\t\t<div id='cardContent' className='col-md-10 col-sm-12 p-0'>\r\n\t\t<HashRouter>\r\n\t\t<AdminCardMainPage typeContent='games' searchText='Поиск игр' />\r\n\t\t</HashRouter>\r\n\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default AdminMainPage;\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Fab, SpeedDial } from 'react-onsenui'; \r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport FormRegAuth from '.././components/FormRegAuth';\r\n\r\nconst PlayerAuth = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div className='bg-home h-vh-100'>\r\n\r\n\t\t<ToolbarMy backlink='/home' heightTitle='Авторизация Пользователя' />\r\n\r\n\t\t<FormRegAuth typeForm='auth' typeUser='player' />\r\n\r\n\t\t<div className='user-auth-block'>\r\n\t\t<NavLink class='text-white link-disable' to='player-register'>\r\n\t\t<SpeedDial>\r\n\t\t<Fab>\r\n\t\t+ \r\n\t\t</Fab>\r\n\t\t</SpeedDial>\r\n\t\t</NavLink>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default PlayerAuth;\r\n","import React from 'react';\r\n\r\nimport { Button, Input } from 'react-onsenui'; \r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\n\r\n\r\nconst PlayerRegister = () => {\r\n\r\n\treturn(\r\n\t\t<div>\r\n\r\n\t\t<ToolbarMy backlink='/player-auth' heightTitle='Регистрация' />\r\n\t\t<div className='user-auth-block'>\r\n\t\t<Input\r\n\t\tclassName='mt-10'\r\n\t\tfloat\r\n\t\tonChange=''\r\n\t\tmodifier='material'\r\n\t\tplaceholder='Логин' />\r\n\r\n\t\t<Input\r\n\t\tclassName='mt-35'\r\n\t\tfloat\r\n\t\tonChange=''\r\n\t\tmodifier='material'\r\n\t\tplaceholder='Пароль' />\r\n\t\t<Button className='mt-100'>ОК</Button>\r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default PlayerRegister;\r\n","import React from 'react';\r\n\r\nimport { Button } from 'react-onsenui';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport data_json_games from '.././json-info/games.json';\r\n\r\nconst GameBlock = ({gameNAME}) => {\r\n\r\n\tvar arr_g;\r\n\r\n\tfor(let i = 0; i < data_json_games.length; i++) {\r\n\t\tif(data_json_games[i].game === gameNAME) {\t \r\n\t\t\tarr_g = data_json_games[i];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<NavLink className='link-disable' to='/page-info-game'>\r\n\t\t <Button modifier=\"large--cta\">{arr_g.game}</Button>\r\n\t\t</NavLink>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default GameBlock;\r\n","import React from 'react';\r\n\r\nimport { SpeedDial, Fab } from 'react-onsenui';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\n\r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport GameBlock from '.././components/GameBlock';\r\n\r\n\r\nconst PlayerMainPage = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\r\n\t\t{ window.infoUser.status !== 'player' ? <Redirect from='/' to='/home'/> : null }\r\n\t\t\r\n\t\t{ (window.infoUser.jsonInfo.activeGame !== '' && window.infoUser.jsonInfo.activeGame !== undefined) ? <Redirect from='/' to='/page-info-game'/> : null }\r\n\r\n\t\t<ToolbarMy heightTitle='PLAYER' />\r\n\t\t<div className='main-block-page'>\r\n\t\t<div className='formAddGame'>\r\n\t\t</div>\r\n\t\t{\r\n\t\t// Показать блок если есть игра\r\n\t\t(window.infoUser.jsonInfo.activeGame !== '' && window.infoUser.jsonInfo.activeGame !== undefined) ? \r\n\t\t<GameBlock gameNAME={window.infoUser.jsonInfo.activeGame} /> :\r\n\t\tnull }\r\n\t\t{\r\n\t\t // Показать блок если нету игры\r\n\t\t (window.infoUser.jsonInfo.activeGame === '') ? \r\n\t\t <div className='user-auth-block'>\r\n\t\t <NavLink to='/join-and-add-game'>\r\n\t\t <SpeedDial>\r\n\t\t <Fab>\r\n\t\t +\r\n\t\t </Fab>\r\n\t\t </SpeedDial>\r\n\t\t </NavLink>\t \r\n\t\t </div> :\r\n\t\t null }\r\n\t\t </div>\r\n\r\n\t\t </div>\r\n\t\t );\r\n\r\n}\r\n\r\n\r\nexport default PlayerMainPage;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst RedirectNoAuth = () => (\r\n\twindow.infoUser.status === '' ? <Redirect from='/' to='/home'/> : null\r\n\t)\r\n\r\nexport default RedirectNoAuth;","import React from 'react';\r\n\r\nimport { Button, Input } from 'react-onsenui';\r\n\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport RedirectNoAuth from '.././components/RedirectNoAuth';\r\n\r\nconst JoinAndAddGame = ({isAuth}) => {\r\n\r\n\tconst submit = () => {\r\n\t\tvar nameGame = document.querySelector('.nameGame').value;\r\n\t\tconsole.log(nameGame);\r\n\t};\r\n\r\n\treturn(\r\n\r\n\t\t<div>\r\n\t\t<RedirectNoAuth/>\r\n\r\n\t\t<ToolbarMy backlink='/player-main-page' heightTitle='Войти в игру' />\r\n\t\t<div className='user-auth-block'>\r\n\t\t<Input\r\n\t\tclassName='nameGame'\r\n\t\tfloat\r\n\t\tmodifier='material'\r\n\t\tplaceholder='ПИН КОД' />\r\n\t\t<Button onClick={submit} className='mt-100'>ОК</Button>\r\n\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default JoinAndAddGame;\r\n","import React from 'react';\r\n\r\nconst BlockHint = () => {\r\n\r\n\t var info_team_player =  window.infoUser.jsonInfoTeams; // Информация о команде игрока\r\n\t var activeHint = +info_team_player.activeHint; // Активная подсказка команды\r\n\t var activeQuestion = +info_team_player.activeQuestion; // Следующий вопрос команды\r\n\t var hintText; // Подсказка на вопрос\r\n\r\n\t if (activeHint > -1 && !!window.infoUser.jsonInfoGame.questions[activeQuestion].hints[activeHint]) {\r\n\t \thintText = window.infoUser.jsonInfoGame.questions[activeQuestion].hints[activeHint].textHint;  \r\n\t } else if (activeHint === -1 && window.infoUser.jsonInfoGame.questions[activeQuestion - 1] !== undefined) {\r\n\t \tlet lastHnt = +window.infoUser.jsonInfoGame.questions[activeQuestion - 1].hints.length - 1;\r\n\t \thintText = window.infoUser.jsonInfoGame.questions[activeQuestion - 1].hints[lastHnt].textHint\r\n\t } else hintText = '';\r\n\r\n\r\n\t return(\r\n\t \t<div>\r\n\t \t{hintText}\r\n\t \t</div>\r\n\t \t);\r\n\t \r\n\r\n\r\n\t}\r\n\r\n\r\n\texport default BlockHint;\r\n","import React from 'react';\r\nimport BlockHint from './BlockHint';\r\n\r\n\r\nconst QuestionInfo = ({activeQuestNum}) => {\r\n\r\n\tif(activeQuestNum !== window.infoUser.jsonInfoGame.questions.length) {\r\n\t\tactiveQuestNum = +activeQuestNum;\r\n\tvar textQuest = window.infoUser.jsonInfoGame.questions[activeQuestNum].quest; // Текст вопроса\r\n\tvar videoQuest = window.infoUser.jsonInfoGame.questions[activeQuestNum].video; // Видео вопроса\r\n\tvar photoQuest = window.infoUser.jsonInfoGame.questions[activeQuestNum].photo; // Фото вопроса\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\t\t{(textQuest !== undefined) ? textQuest : null}\r\n\t\t<br/>\r\n\t\t{(videoQuest !== undefined && videoQuest !== '') ? \r\n\t\t<video className='mw-100 my-20' controls=\"controls\">\r\n\t\t<source src={videoQuest} />\r\n\t\t</video> \r\n\t\t: null}\r\n\t\t<br/>\r\n\t\t{(photoQuest !== undefined && photoQuest !== '') ? <img className='mw-100' src={photoQuest} alt='' /> : null}\r\n\r\n\t\t<div id='block_hint'>\r\n\t\t<BlockHint />\r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t);\r\n\r\n} else {\r\n \r\n\tvar name = window.infoUser.jsonInfoTeams; // Назание команды\r\n\tvar captain = window.infoUser.jsonInfoTeams.captain; // Капитан\r\n\t// var players = window.infoUser.jsonInfoGame.questions[team_player].players.length; // Игроки\r\n\tvar mistakes = window.infoUser.jsonInfoTeams.mistakes; // Ошибки\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\t\t<h2>Результат</h2>\r\n\t\t<br/>\r\n\t\tПобедитель : {name} <br/>\r\n\t\tВремя : {name} <br/>\r\n\t\tОшибок : {mistakes} <br/>\r\n\t\tКапитан : {captain} <br/>\r\n\t\tКоманда : {captain} <br/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nexport default QuestionInfo;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Task from './Task';\r\n\r\n\r\nexport const answerIsTrue = () => {\r\n\r\n\r\n\tvar activeQuestion = window.infoUser.jsonInfoTeams.activeQuestion; // Активный вопрос команды\r\n\twindow.infoUser.jsonInfoTeams.activeQuestion = +activeQuestion + 1; // Победа +1\r\n\twindow.infoUser.jsonInfoTeams.activeHint = -1;\r\n\twindow.infoUser.jsonInfoTeams.nextHint = 0;\r\n\r\n\t/* alert('Правильно');\r\n\t /window.location = '/#/page-info-game'; */\r\n\r\n\t\tReactDOM.render(<Task/>,document.getElementById('infoGameBlock')); // Отрисовка следующего вопроса\r\n\r\n\r\n\t};\r\n\r\n","import React from 'react';\r\nimport { Card, Button, Input } from 'react-onsenui';\r\nimport { answerIsTrue } from './NextTaskOrWin';\r\n\r\n\r\nconst QuestionCardAnswer = () => {\r\n\r\n\r\n\tconst checkAnswer = () => {\r\n\r\n \t\tlet activeQuestionNum = +window.infoUser.jsonInfoTeams.activeQuestion; // Текущий номер вопроса\r\n\t \tlet answerEnter = document.querySelector('.inputAnswer').value.toLowerCase(); // Введённый ответ\r\n\t \tlet trueAnswer = window.infoUser.jsonInfoGame.questions[activeQuestionNum].answer.toLowerCase(); // Правильный ответ\r\n\r\n\t \tif(answerEnter === trueAnswer) {\r\n\t \t\tanswerIsTrue();\r\n\t \t} else {\r\n\t \t\tlet mistake = +window.infoUser.jsonInfoTeams.mistakes + 1;\r\n\t \t\twindow.infoUser.jsonInfoTeams.mistakes = mistake;\r\n\t \t\talert('Не правильно');\r\n\t \t\t/*\r\n\t\t\t// \tЗАПРОС НА +1 К НЕПРАВИЛЬНЫМ ОТВЕТАМ КОМАНДЫ И ПОЛЬЗОВАТЕЛЯ\r\n\t\t\t*/\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Card className='card-question'>\r\n\t\t<div align='center'>\r\n\t\t<Input\r\n\t\tclassName='inputAnswer'\r\n\t\tfloat\r\n\t\tmodifier='material'\r\n\t\tplaceholder='Ответ' />\r\n\t\t<Button modifier=\"large--cta\" onClick={checkAnswer} className='mt-35'>ОК</Button>\r\n\t\t</div>\r\n\t\t</Card>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default QuestionCardAnswer;\r\n","import React from 'react';\r\nimport Timer from 'react-compound-timer';\r\nimport { answerIsTrue } from './NextTaskOrWin';\r\n\r\nconst TimerHeader = () => {\r\n\r\n\tvar totalTime = 0;\r\n\tvar info_team_player =  window.infoUser.jsonInfoTeams; // Информация о команде игрока\r\n\tvar activeQuestion = +info_team_player.activeQuestion; // Активный вопрос команды\r\n\tvar activeHint = +info_team_player.activeHint; // Активная подсказка команды\r\n\tvar nextHint = +info_team_player.nextHint; // Следующая подсказка команды\r\n\tvar infoQuest = window.infoUser.jsonInfoGame.questions[activeQuestion]; // Информация о игре\r\n\tvar minuteToNextHint; // Времени в минутах на вопрос\r\n\tvar textHeaderTime; // Текст \" До конца \"\r\n\r\n\r\n\tfor(let i = 0; i <= activeHint; i++) {\r\n\t\ttotalTime += +infoQuest.hints[i].minuteToHint;\r\n\t}\r\n\ttotalTime = totalTime.toFixed(5);\r\n\r\n\r\n\tif(nextHint > infoQuest.hints.length - 1 && +totalTime < +infoQuest.timePerLevel) {\r\n\t\tminuteToNextHint = infoQuest.timePerLevel - totalTime; \r\n\t\ttextHeaderTime = 'До следующего вопроса';\r\n\t\ttotalTime = infoQuest.timePerLevel;\r\n\t} else {\r\n\t\tminuteToNextHint = infoQuest.hints[nextHint].minuteToHint;  \r\n\t\ttextHeaderTime = `До ${nextHint + 1} подсказки`;\r\n\t}\r\n\tminuteToNextHint *= 60 * 1000;\r\n\r\n\r\n\r\nconst rendererNewTimer = () => {\r\n\tif(nextHint > infoQuest.hints.length - 1 && +totalTime === +infoQuest.timePerLevel) {\r\n\t answerIsTrue();\r\n} else {\r\n\twindow.infoUser.jsonInfoTeams.activeHint = +activeHint + 1;\r\n\twindow.infoUser.jsonInfoTeams.nextHint = +nextHint + 1;\r\n}\r\n\r\nwindow.location = '/#/';\r\n}\r\n\r\n\r\nreturn (\r\n\t<div className='timeHeader'>\r\n\r\n\t<div className='timeHeader-span'>\r\n\t<Timer\r\n\tinitialTime={minuteToNextHint}\r\n\tdirection=\"backward\"\r\n\tcheckpoints={[\r\n\t\t{\r\n\t\t\ttime: 0,\r\n\t\t\tcallback: () => rendererNewTimer(),\r\n\t\t}\r\n\t\t]}\r\n\t\t>\r\n\t\t{() => (  \r\n\t\t\t<React.Fragment>{textHeaderTime}<br/>\r\n\t\t\t<Timer.Minutes />:\r\n\t\t\t<Timer.Seconds />\r\n\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\t\t</Timer>\r\n\t\t</div> \r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\n\r\n\r\nexport default TimerHeader;\r\n","import React from 'react';\r\n\r\n\r\nconst FooterAnswerCount = () => {\r\n\r\n let activeQuest = window.infoUser.jsonInfoTeams.activeQuestion;\r\n let totalQuest = window.infoUser.jsonInfoGame.questions.length;\r\n\r\n\treturn(\r\n\t\t<div className='footer-answer-count bg-white'>{activeQuest} / {totalQuest}</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default FooterAnswerCount;\r\n\r\n\r\n","import React from 'react';\r\nimport { Card } from 'react-onsenui';\r\nimport QuestionInfo from './QuestionInfo';\r\nimport QuestionCardAnswer from './QuestionCardAnswer';\r\nimport TimerHeader from './TimerHeader';\r\nimport FooterAnswerCount from './FooterAnswerCount';\r\n\r\n\r\nconst Task = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t \r\n\t\t<div id='timeBlock'>\r\n\t \r\n\t\t<TimerHeader />\r\n\t \r\n\t\t</div>\r\n\r\n\t\t<div className='content-card-answer'>\r\n\r\n\r\n\t\t<Card className='card-question'>\r\n\t\t<div id='div_question_info'>\r\n\t\t<QuestionInfo activeQuestNum={0} />\r\n\t\t</div>\r\n\t\t</Card>\r\n\r\n\t\t<QuestionCardAnswer />\r\n\r\n\t\t</div>\r\n\r\n\t\t<FooterAnswerCount />\r\n\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport RedirectNoAuth from '.././components/RedirectNoAuth';\r\nimport Task from '.././components/PageQuestion/Task';\r\nimport { getInfoGamesJson } from '.././components/GetInfoGamesJson';\r\n \r\n\r\nconst InfoGame = () => {\r\n\r\n\tgetInfoGamesJson();\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t<RedirectNoAuth />\t \r\n\t\t<ToolbarMy backlink='/player-main-page' heightTitle='Игра' />\r\n\r\n\t\t<div id='infoGameBlock'>\r\n\t\t \r\n\t\t<Task/>\r\n\t \r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default InfoGame;\r\n","import data_json_games from '../json-info/games.json';\r\n\r\nexport const getInfoGamesJson = () => {\r\n\r\nfor(let i = 0; i < data_json_games.length; i++) { // Перебор игр\r\n\t    let active_game = window.infoUser.jsonInfo.activeGame; // Текущая игра пользователя\r\n\t    let game = data_json_games[i].game;\r\n\t    if(active_game === game)\r\n\t    {\r\n\t    \twindow.infoUser.jsonInfoGame = data_json_games[i];\r\n\t    }\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Form, Button, Card  } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst CreateNewGame = () => {\r\n\r\n\tvar nameGameElement = React.createRef(); // Название игры\r\n\tvar dateGameElement = React.createRef(); // Дата\r\n\tvar timeGameElement = React.createRef(); // Время\r\n\r\n\tconst addPostNewGame = () => {\r\n\t\tvar obj_result = {};\r\n\t\tlet nameGame = nameGameElement.current.value;\r\n\t\tlet dateGame = dateGameElement.current.value;\r\n\t\tlet timeGame = timeGameElement.current.value;\r\n\t\tconsole.log(nameGame);\r\n\t\tobj_result = {\r\n\t\t\t\"game\": nameGame,\r\n\t\t\t\"dateToStart\": dateGame,\r\n\t\t\t\"timeToStart\": timeGame\r\n\t\t}\r\n\t\tconsole.log(obj_result);\r\n\t\tif(nameGame !== '' && dateGame !== '' && timeGame !== '') {\r\n\t\t\talert(`Название игры - ${obj_result.game}\\nДата начала - ${obj_result.dateToStart}\\nВремя начала - ${obj_result.timeToStart}`);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\r\n\t\t<ToolbarMy className='my-20' backlink='admin-main-page' heightTitle='Создание игры' />\r\n\r\n\t\t<Card fluid className='w-80 my-20 mt-5'>\r\n\r\n\t\t<Card.Content>\r\n\t\t<Form>\r\n\t\t<Form.Field>\r\n\t\t<label>Название</label>\r\n\t\t<input placeholder='Название игры' ref={nameGameElement} required />\r\n\t\t</Form.Field>\r\n\t\t<Form.Field>\r\n\t\t<label>Дата начала - для оповещения</label>\r\n\t\t<input type='date' placeholder='Дата' ref={dateGameElement} required />\r\n\t\t</Form.Field>\r\n\t\t<Form.Field>\r\n\t\t<label>Время начала - для оповещения</label>\r\n\t\t<input type='time' placeholder='Время' ref={timeGameElement} required />\r\n\t\t</Form.Field>\r\n\t\t<div align='center'>\r\n\t\t<Button onClick={addPostNewGame} inverted color='blue'>\r\n\t\tСоздать\r\n\t\t</Button>\r\n\t\t</div>\r\n\t\t</Form>\r\n\t\t</Card.Content>\r\n\r\n\t\t</Card>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CreateNewGame;\r\n","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Form, Button, Card } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst CreateNewGame = () => {\r\n\r\n\tvar usersList = window.infoUser.newJsonInfoUsers; /* Список пользователей */\r\n\tvar randomCode = ''; /* Случайный код для группы */\r\n\tvar captain = ''; /* Капитан */\r\n\tvar nameTeamElement = React.createRef(); /* Название группы */\r\n\tvar obj_result = {}; /* Результат */\r\n\r\n\tconst randomCodeFunc = () => {\r\n\t\tvar symbols = \"ABCDEFGHIKLMNOPQRSTVXYZ0123456789\";\r\n\t\tfor(let i = 0; i < 5; i++) {\r\n\t\t\tvar randomIndex = Math.floor(Math.random() * symbols.length);\r\n\t\t\trandomCode += symbols[randomIndex];\r\n\t\t}\r\n\t};\r\n\trandomCodeFunc();\r\n\r\n\r\n\tconst getCaptain = (e) => {\r\n\t\tcaptain = e.target.value;\r\n\t};\r\n\r\n\tconst addNewGroup = () => {\r\n\t\tlet nameTeam = nameTeamElement.current.value;\r\n\t\tobj_result = {\r\n\t\t\t\"name\": nameTeam,\r\n\t\t\t\"code\": randomCode,\r\n\t\t\t\"captain\": captain\r\n\t\t}\r\n\t\tif(nameTeam !== '' && randomCode !== '') {\r\n\t\t\tconsole.log(obj_result);\r\n\t\t\talert(`Название игры - ${nameTeam}\\nКапитан - ${captain}\\nКод для доступа к группе - ${randomCode}`);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\t\t<ToolbarMy className='my-20' backlink='admin-main-page' heightTitle='Создание группы' />\r\n\t\t<Card fluid className='w-80 my-20 mt-5'>\r\n\t\t<Card.Content>\r\n\t\t<Form>\r\n\r\n\t\t<Form.Field>\r\n\t\t<label>Название</label>\r\n\t\t<input placeholder='Название группы' ref={nameTeamElement} required />\r\n\t\t</Form.Field>\r\n\r\n\t\t<Form.Field>\r\n\t\t<label for=\"captainSelect\">Капитан</label>\r\n\t\t<select onChange={getCaptain} class=\"form-control\" id=\"captainSelect\">\r\n\t\t<option></option>\r\n\t\t{\r\n\t\t\tusersList.map((data) => {\r\n\t\t\t\treturn <option value={data.id}>{data.login}</option>\t \r\n\t\t\t})\r\n\t\t}\r\n\t\t</select>\r\n\t\t</Form.Field>\r\n\r\n\t\t<div align='center'>\r\n\t\t<Button onClick={addNewGroup} inverted color='blue'>\r\n\t\tСоздать\r\n\t\t</Button>\r\n\t\t</div>\r\n\t\t</Form>\r\n\t\t</Card.Content>\r\n\r\n\t\t</Card>\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\n\r\n\r\nexport default CreateNewGame;\r\n","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Card, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst InfoGameForAdmin = () => {\r\n\r\n\tvar infoTeams = window.infoUser.jsonInfoTeams;\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\t\t<ToolbarMy className='my-20' backlink='admin-main-page' heightTitle={`Информация о игре ${window.infoUser.editName}`} />\r\n\t\t<Card fluid className='w-80 my-20 mt-5'>\r\n\t\t<Card.Content>\r\n\r\n\t\t<div align='center'>\r\n\t\t<Table celled>\r\n\t\t<Table.Header>\r\n\t\t<Table.Row>\r\n\t\t<Table.HeaderCell>Команда</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Текущий вопрос</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Текущая подсказка</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Правильных ответов</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Ложных ответов</Table.HeaderCell>\r\n\t\t</Table.Row>\r\n\t\t</Table.Header>\r\n\t\t<Table.Body>\r\n\t\t{\r\n\t\t\tinfoTeams.map(data => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t<Table.Cell>{data.name}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.activeQuestion}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.activeHint}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.falseAnswer}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.trueAnswer}</Table.Cell>\r\n\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t\t</Table.Body>\r\n\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t</Card.Content>\r\n\t\t</Card>\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default InfoGameForAdmin;\r\n","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Card, Table } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst InfoGameForAdmin = () => {\r\n\r\n\tvar thisTeamCode = window.infoUser.editName;\r\n\tvar allTeams = window.infoUser.jsonInfoTeams;\r\n\tvar allUsers = window.infoUser.newJsonInfoUsers;\r\n\tvar infoTeams;\r\n\tvar infoPlayers = [];\r\n\r\n\tfor(let i = 0; i < allTeams.length; i++) { // Парсинг команд с соответствующим code\r\n\t\tif(thisTeamCode === allTeams[i].code) {\r\n\t\t\tinfoTeams = allTeams[i];\r\n\t\t}\r\n\t}\r\n\r\n\tfor(let i = 0; i < allUsers.length; i++) { // Парсинг пользователей с соответствующим code\r\n\t\tif(thisTeamCode === allUsers[i].team) {\r\n\t\t\tinfoPlayers.push(allUsers[i]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div align='center'>\r\n\t\t<ToolbarMy className='my-20' backlink='admin-main-page' heightTitle={`Информация о группе ${infoTeams.name}`} />\r\n\t\t<Card fluid className='w-80 my-20 mt-5'>\r\n\t\t<Card.Content>\r\n\r\n\t\t<div align='center'>\r\n\t\t<Table celled>\r\n\t\t<Table.Header>\r\n\t\t<Table.Row>\r\n\t\t<Table.HeaderCell>Игрок</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Правильных ответов в этой игре</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Ложных ответов в этой игре</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Правильных ответов всего</Table.HeaderCell>\r\n\t\t<Table.HeaderCell>Ложных ответов всего</Table.HeaderCell>\r\n\t\t</Table.Row>\r\n\t\t</Table.Header>\r\n\t\t<Table.Body>\r\n\t\t{\r\n\t\t\tinfoPlayers.map(data => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t<Table.Cell>{data.login}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.activeQuestion}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.activeHint}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.totalAnswerIsTrue}</Table.Cell>\r\n\t\t\t\t\t<Table.Cell>{data.totalAnswerIsFalse}</Table.Cell>\r\n\t\t\t\t\t</Table.Row>\r\n\t\t\t\t\t)\r\n\t\t\t})\r\n\t\t}\r\n\t\t</Table.Body>\r\n\t\t</Table>\r\n\t\t</div>\r\n\r\n\t\t</Card.Content>\r\n\t\t</Card>\r\n\t\t</div>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default InfoGameForAdmin;\r\n","import React from 'react';\r\nimport data_json_games from './../../json-info/games.json';\r\nimport { Card, Button, Modal } from 'semantic-ui-react';\r\n\r\n\r\nconst EditorQuestion = () => {\r\n\r\n var arrData;\r\n\r\n for (let i = 0; i < data_json_games.length; i++) {\r\n  if(data_json_games[i].game === window.infoUser.editName) {\r\n    arrData = data_json_games[i].questions;\r\n  }\r\n}\r\n\r\n\r\nconst addHint = (e) => {\r\n  let id = +e.target.id;\r\n\r\n  let obj = {\r\n    textHint: 'qweqwe',\r\n    minuteToHint: '12.12'\r\n\r\n  }\r\n\r\n\r\n  arrData[id].hints.push(obj);\r\n\r\n};\r\n\r\nconst saveQuest = (e) => {\r\n  let id = +e.target.id;\r\n\r\n\r\n  console.log(arrData);\r\n  console.log(id);\r\n  console.log(arrData[id]);\r\n\r\n};\r\n\r\nreturn (\r\n  <Card className='w-100 overflow-a'>\r\n  <table className=\"table\">\r\n  <thead>\r\n  <tr>\r\n  <th scope=\"col\">Вопрос</th>\r\n  <th scope=\"col\">Элемент</th>\r\n  <th scope=\"col\">Значение</th>\r\n  </tr>\r\n  </thead>\r\n  {\r\n    arrData.map((data, index) => (\r\n      <tbody>\r\n\r\n      <th>{index + 1}</th>\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Вопрос</th>\r\n      <th><textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\">{data.quest}</textarea></th>\r\n      </tr>\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Ответ</th>\r\n      <th><input type=\"text\" className=\"form-control\" id=\"\" value={data.answer} /></th>\r\n      </tr>\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Фото</th>\r\n      <th><input type=\"text\" className=\"form-control\" id=\"\" value={data.photo} /></th>\r\n      </tr>\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Видео</th>\r\n      <th><input type=\"text\" className=\"form-control\" id=\"\" value={data.video} /></th>\r\n      </tr>\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Времени на уровень</th>\r\n      <th><input type=\"text\" className=\"form-control\" id=\"\" value={data.timePerLevel} /></th>\r\n      </tr>\r\n\r\n\r\n      <tr>\r\n      <th></th>\r\n      <th>Подсказки</th>\r\n      <th>\r\n\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Подсказка</th>\r\n      <th scope=\"col\">Времени на подсказку</th>\r\n      {\r\n        data.hints.map((hint, index) => (\r\n\r\n          <tr>\r\n          <th>{index + 1}</th>\r\n          <th><textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\">{hint.textHint}</textarea></th>\r\n          <th><input type=\"text\" className=\"form-control\" id=\"\" value={hint.minuteToHint} /></th>\r\n          </tr>\r\n\r\n          ))\r\n\r\n\r\n      }\r\n\r\n      <tr>\r\n      <th colspan=\"3\">\r\n      <div className='text-center'>\r\n      <Modal trigger={<Button>Добавить подсказку</Button>}>\r\n      <Modal.Header>Редактор подсказки</Modal.Header>\r\n      <Modal.Content >          <input type='text' placeholder='Подсказка' />\r\n      <input type='time'  />\r\n      <Button id={index} onClick={addHint} positive >Сохранить результат</Button>\r\n      </Modal.Content>\r\n      </Modal>\r\n      </div>\r\n      </th>\r\n      </tr>\r\n      </th>\r\n      </tr>\r\n\r\n\r\n\r\n\r\n      <tr>\r\n      <th colspan=\"3\">\r\n      <div className='text-center'>\r\n      <Button id={index} onClick={saveQuest} positive >Сохранить результат</Button>\r\n      </div>\r\n      </th>\r\n      </tr>\r\n\r\n      </tbody>\r\n      ))\r\n  }\r\n\r\n  </table>\r\n  </Card>\r\n  );\r\n}\r\n\r\n\r\nexport default EditorQuestion;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport data_json_teams from './../../json-info/teams.json';\r\nimport { Card, Button, Segment, Grid, Divider, Header  } from 'semantic-ui-react';\r\n\r\nconst EditorTeamsPlayers = () => {\r\n\r\n var arrData = data_json_teams;\r\n var nameGame = window.infoUser.editName;\r\n\r\n\r\n /* NEW JSON TEAM */\r\n if(window.infoUser.jsonInfoTeams.length !== 0) {\r\n  arrData = window.infoUser.jsonInfoTeams;\r\n}\r\n/* NEW JSON TEAM */\r\n\r\nconst addTeam = (e) => {\r\n  let id = e.target.id;\r\n  for (let i = 0; i < arrData.length; i++) {\r\n    if (arrData[i].code === id) {\r\n      arrData[i].game = nameGame;\r\n      window.infoUser.jsonInfoTeams = arrData;\r\n      ReactDOM.render(<EditorTeamsPlayers />,document.getElementById('editorTeamsPlayersCard'));\r\n        break;\r\n      }\r\n    }\r\n    console.log(arrData);\r\n      alert('В консоли результат');\r\n    };\r\n\r\n    const delTeam = (e) => {\r\n      let id = e.target.id;\r\n\r\n      for (let i = 0; i < arrData.length; i++) {\r\n        if (arrData[i].code === id) {\r\n          arrData[i].game = '';\r\n          window.infoUser.newJsonInfoTeams = arrData;\r\n          ReactDOM.render(<EditorTeamsPlayers />,document.getElementById('editorTeamsPlayersCard'));\r\n            break;\r\n          }\r\n        }\r\n        console.log(arrData);\r\n          alert('В консоли результат');\r\n        };\r\n\r\n\r\n        return (\r\n         <div align='center'>\r\n         <Segment placeholder>\r\n         <Grid columns={2} relaxed='very' stackable>\r\n         <Grid.Column>\r\n         <Header>Список не участвующих команд</Header>\r\n         {\r\n          arrData.filter(e => {\r\n            return (e.game !== window.infoUser.editName)\r\n          }).map(e => {\r\n            return (\r\n              <Card>\r\n              <Card.Content>\r\n              <Card.Header>{e.name}</Card.Header>\r\n              <Card.Meta>Игроков - {e.players.length}</Card.Meta>\r\n              <Card.Description>\r\n              <strong>Капитан - </strong> {e.captain}\r\n              </Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n              <div className='ui two buttons'>\r\n              <Button id={e.code} onClick={addTeam} basic color='green'>\r\n              Добавить\r\n              </Button>\r\n              </div>\r\n              </Card.Content>\r\n              </Card>\r\n              )\r\n          })\r\n        }\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n        <Header>Список участников</Header>\r\n        {\r\n         arrData.filter(e => {\r\n          return (e.game === window.infoUser.editName)\r\n        }).map(e => {\r\n          return (\r\n            <Card>\r\n            <Card.Content>\r\n            <Card.Header>{e.name}</Card.Header>\r\n            <Card.Meta>Игроков - {e.players.length}</Card.Meta>\r\n            <Card.Description>\r\n            <strong>Капитан - </strong> {e.captain}\r\n            </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n            <div className='ui two buttons'>\r\n            <Button id={e.code} onClick={delTeam} basic color='red'>\r\n            Удалить\r\n            </Button>\r\n            </div>\r\n            </Card.Content>\r\n            </Card>\r\n            )\r\n        })\r\n      }\r\n      </Grid.Column>\r\n      </Grid>\r\n\r\n      <Divider className='d-none d-md-block' vertical>|||</Divider>\r\n      </Segment>\r\n      </div>\r\n      );\r\n      }\r\n\r\n\r\n      export default EditorTeamsPlayers;","import React from 'react';\r\nimport EditorQuestion from './EditorQuestion';\r\nimport EditorTeamsPlayers from './EditorTeamsPlayers';\r\n\r\n\r\nconst CardListContent = ({typeContent}) => {\r\n\r\n\r\n\r\n\tif(typeContent === 'questions') {\r\n\t\treturn <EditorQuestion />\r\n\t} else if (typeContent === 'groups') {\r\n\t\treturn (\r\n\t\t\t<div id='editorTeamsPlayersCard'>\r\n\t\t\t<EditorTeamsPlayers />\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default CardListContent;","import React from 'react';\r\nimport ToolbarMy from '.././components/ToolbarMy';\r\nimport { Button } from 'semantic-ui-react';\r\nimport ReactDOM from 'react-dom';\r\nimport CardListContent from '.././components/PageEditorGame/CardListContent';\r\n\r\n\r\nconst EditGameForAdmit = (props) => {\r\n\r\n\t/* LOKAL STORAGE */\r\n\tlet gameName = localStorage.getItem('gameEditor');\r\n\tif(gameName !== null) {\r\n\t\twindow.infoUser.editName = gameName;\r\n\t}\r\n\t/* LOKAL STORAGE */\r\n\r\n\tconst getCardContent = (e) => {\r\n\t\tvar idBtn = e.target.id;\r\n\r\n\t\tif (idBtn === 'btnQuestions') {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<CardListContent typeContent='questions'/>,\r\n\t\t\t\tdocument.getElementById('cardContent')\r\n\t\t\t\t);\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<Button.Group>\r\n\t\t\t\t<Button id='btnQuestions' onClick={getCardContent} positive >Вопросы</Button>\r\n\t\t\t\t<Button.Or text='|||' />\r\n\t\t\t\t<Button id='btnPlayers' onClick={getCardContent} >Участники</Button>\r\n\t\t\t\t</Button.Group>,\r\n\t\t\t\tdocument.getElementById('btnOption')\r\n\t\t\t\t);\r\n\t\t} else if (idBtn === 'btnPlayers') {\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<CardListContent typeContent='groups'/>,\r\n\t\t\t\tdocument.getElementById('cardContent')\r\n\t\t\t\t);\r\n\t\t\tReactDOM.render(\r\n\t\t\t\t<Button.Group>\r\n\t\t\t\t<Button id='btnQuestions' onClick={getCardContent} >Вопросы</Button>\r\n\t\t\t\t<Button.Or text='|||' />\r\n\t\t\t\t<Button id='btnPlayers' onClick={getCardContent} positive>Участники</Button>\r\n\t\t\t\t</Button.Group>,\r\n\t\t\t\tdocument.getElementById('btnOption')\r\n\t\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn(\t\r\n\t\t<div align='center'>\r\n\t\t<ToolbarMy backlink='/admin-main-page' heightTitle={`Редактор ${window.infoUser.editName} игры`} />\t\r\n\t\t<div id='btnOption'>\r\n\t\t<Button.Group>\r\n\t\t<Button id='btnQuestions' onClick={getCardContent} positive >Вопросы</Button>\r\n\t\t<Button.Or text='|||' />\r\n\t\t<Button id='btnPlayers' onClick={getCardContent} >Участники</Button>\r\n\t\t</Button.Group>\r\n\t\t</div>\r\n\t\t<br/><br/><br/>\r\n\r\n\t\t<div id='cardContent'>\r\n\t\t<CardListContent typeContent='questions' />\r\n\t\t</div>\r\n\r\n\r\n\r\n\t\t</div>\r\n\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default EditGameForAdmit;\r\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\n\n\nimport Home from './panels/Home';\nimport AdminAuth from './panels/AdminAuth';\nimport AdminMainPage from './panels/AdminMainPage';\nimport PlayerAuth from './panels/PlayerAuth';\nimport PlayerRegister from './panels/PlayerRegister';\nimport PlayerMainPage from './panels/PlayerMainPage';\nimport JoinAndAddGame from './panels/JoinAndAddGame';\nimport InfoGame from './panels/InfoGame';\nimport CreateNewGame from './panels/CreateNewGame';\nimport CreateNewTeam from './panels/CreateNewTeam';\nimport InfoGameForAdmin from './panels/InfoGameForAdmin';\nimport InfoTeamForAdmin from './panels/InfoTeamForAdmin';\nimport EditGameForAdmit from './panels/EditGameForAdmit';\n\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './components/main.css';\n\nimport data_json_admins from './json-info/admins.json';\nimport data_json_users from './json-info/users.json';\nimport data_json_teams from './json-info/teams.json';\nimport 'bootstrap-4-react';\n\nconst App = () => {\n\n\n// Проверка авторизации пользователя через куки\nconst accessAccount = () => {\n  if(localStorage.getItem('authLoginName') !== '' && localStorage.getItem('authLoginName') !== null) {\n    let name =  localStorage.getItem('authLoginName');\n    var data_json;\n\n    if(localStorage.getItem('authLoginStatus') === 'admin') {\n      data_json = data_json_admins;\n      window.infoUser.newJsonInfoUsers = data_json_users;\n      window.infoUser.status = 'admin'; \n      window.infoUser.jsonInfoTeams = data_json_teams; // ЗАГРУЗКА ВСЕХ КОМАНД\n    }\n    else if (localStorage.getItem('authLoginStatus') === 'player') {\n      data_json = data_json_users;\n      window.infoUser.status = 'player';\n    }\n    for(let i = 0; i < data_json.length; i++) { // ЗАГРУЗКА ПРОФИЛЯ\n      if(data_json[i].login === name)\n      {\n        window.infoUser.jsonInfo = data_json[i];\n      }\n      for(let i = 0; i < data_json.length; i++) { // ЗАГРУЗКА КОМАНДЫ\n        if(window.infoUser.jsonInfo.team === data_json_teams[i].code) {\n         window.infoUser.jsonInfoTeams = data_json_teams[i]; \n       }\n     }\n   }\n }\n} \naccessAccount();\n\n\n\n\n\nreturn (\n  <div>\n\n  <Route exact path='/' component={Home} />\n  <Route exact path='/home' component={Home} />\n\n  <Route path='/player-auth' render={ () => <PlayerAuth />} />\n  <Route path='/player-register' component={PlayerRegister} />\n  <Route path='/player-main-page' render={ () => <PlayerMainPage />} />\n\n  <Route path='/admin-auth' component={AdminAuth} />\n  <Route path='/admin-main-page' render={ () => <AdminMainPage /> } />\n  <Route path='/info-game-for-admin' render={ () => <InfoGameForAdmin /> } />\n  <Route path='/edit-game-for-admin' render={ () => <EditGameForAdmit /> } />\n  <Route path='/info-team-for-admin' render={ () => <InfoTeamForAdmin /> } />\n\n\n  <Route path='/create-new-game' component={CreateNewGame} />\n  <Route path='/create-new-team' component={CreateNewTeam} />\n\n\n  <Route path='/join-and-add-game' component={JoinAndAddGame} />\n  <Route path='/page-info-game' component={InfoGame} />\n\n\n  </div>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nwindow.infoUser = {\n\tjsonInfo: [],\n\tjsonInfoGame: [],\n\tjsonInfoTeams: [],\n\tstatus: '',\n\tlogin: '',\n\tanswerIsTrue: 0,\n\tanswerIsFalse: 0,\n\tgameIfAdmin: '',\n\teditName: '',\n\tcodeTeam: '',\n\tnewJsonInfoUsers: []\n};\n\nReactDOM.render(\n\t<HashRouter>\n\t<App />\n\t</HashRouter>,\n\tdocument.getElementById('root')\n\t);\n\n\t// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}